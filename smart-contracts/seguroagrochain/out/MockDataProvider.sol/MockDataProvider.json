{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getResponse","inputs":[{"name":"requestId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"hasResponded","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"hasRespondedToRequest","inputs":[{"name":"requestId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lastRequestId","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"lastSubmittedValue","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"responses","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"submitData","inputs":[{"name":"requestId","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x6080806040523461002857600480546001600160a01b031916331790556103a1908161002e8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c918263128624f21461033d575081633257d81814610310578163415a2bc11461028f5781636aadadfb146101f957816372164a6c146101d25781638da5cb5b146101aa578163a77090c81461018b578163f2fde38b146100a9575063fc2a88c31461008857600080fd5b346100a557816003193601126100a5576020906002549051908152f35b5080fd5b91905034610187576020366003190112610187576001600160a01b038235818116929083900361018357835491821633036101375782156100f557506001600160a01b03191617905580f35b5162461bcd60e51b8152602081850181905260248201527f4e6577206f776e65722063616e6e6f74206265207a65726f20616464726573736044820152606490fd5b5162461bcd60e51b8152602081850152602160248201527f4f6e6c79206f776e65722063616e207472616e73666572206f776e65727368696044820152600760fc1b6064820152608490fd5b8480fd5b8280fd5b5050346100a557816003193601126100a5576020906003549051908152f35b9050346101875782600319360112610187575490516001600160a01b03909116815260209150f35b90503461018757602036600319011261018757602092829135815280845220549051908152f35b91905034610187578060031936011261018757815460243592803592916001600160a01b0316330361024d575081845283602052828185205560016020528320600160ff1982541617905560025560035580f35b6020606492519162461bcd60e51b8352820152601a60248201527f4f6e6c79206f776e65722063616e207375626d697420646174610000000000006044820152fd5b839150346100a55760203660031901126100a557803590818352600160205260ff8484205416156102cd578183526020838152848420548551908152f35b606490602085519162461bcd60e51b8352820152601c60248201527f4e6f20726573706f6e736520666f7220746869732072657175657374000000006044820152fd5b905034610187576020366003190112610187578160209360ff923581526001855220541690519015158152f35b92915034610367576020366003190112610367573583526001602090815292205460ff1615158152f35b8380fdfea26469706673582212201ab39993ef71929ac9be6095da5f18cf10355a915588fb0d575965d10fa133fb64736f6c63430008130033","sourceMap":"143:1867:104:-:0;;;;;;;510:18;143:1867;;-1:-1:-1;;;;;;143:1867:104;518:10;143:1867;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060408181526004918236101561001657600080fd5b600092833560e01c918263128624f21461033d575081633257d81814610310578163415a2bc11461028f5781636aadadfb146101f957816372164a6c146101d25781638da5cb5b146101aa578163a77090c81461018b578163f2fde38b146100a9575063fc2a88c31461008857600080fd5b346100a557816003193601126100a5576020906002549051908152f35b5080fd5b91905034610187576020366003190112610187576001600160a01b038235818116929083900361018357835491821633036101375782156100f557506001600160a01b03191617905580f35b5162461bcd60e51b8152602081850181905260248201527f4e6577206f776e65722063616e6e6f74206265207a65726f20616464726573736044820152606490fd5b5162461bcd60e51b8152602081850152602160248201527f4f6e6c79206f776e65722063616e207472616e73666572206f776e65727368696044820152600760fc1b6064820152608490fd5b8480fd5b8280fd5b5050346100a557816003193601126100a5576020906003549051908152f35b9050346101875782600319360112610187575490516001600160a01b03909116815260209150f35b90503461018757602036600319011261018757602092829135815280845220549051908152f35b91905034610187578060031936011261018757815460243592803592916001600160a01b0316330361024d575081845283602052828185205560016020528320600160ff1982541617905560025560035580f35b6020606492519162461bcd60e51b8352820152601a60248201527f4f6e6c79206f776e65722063616e207375626d697420646174610000000000006044820152fd5b839150346100a55760203660031901126100a557803590818352600160205260ff8484205416156102cd578183526020838152848420548551908152f35b606490602085519162461bcd60e51b8352820152601c60248201527f4e6f20726573706f6e736520666f7220746869732072657175657374000000006044820152fd5b905034610187576020366003190112610187578160209360ff923581526001855220541690519015158152f35b92915034610367576020366003190112610367573583526001602090815292205460ff1615158152f35b8380fdfea26469706673582212201ab39993ef71929ac9be6095da5f18cf10355a915588fb0d575965d10fa133fb64736f6c63430008130033","sourceMap":"143:1867:104:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;343:28;143:1867;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;143:1867:104;;;;-1:-1:-1;;;;;143:1867:104;;;;;;;;;;;;;;;;;1841:10;:19;143:1867;;1916:22;;143:1867;;-1:-1:-1;;;;;;;143:1867:104;;;;;;;;-1:-1:-1;;;143:1867:104;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;143:1867:104;;;;;;;;;;;;;;;;;-1:-1:-1;;;143:1867:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;143:1867:104;;;;;;;-1:-1:-1;143:1867:104;;;;;;;;;-1:-1:-1;;143:1867:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;143:1867:104;766:10;:19;143:1867;;;;;;;;;;;;;;;;;;;;;;;;;;;;922:25;143:1867;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;143:1867:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;143:1867:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;143:1867:104;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"methodIdentifiers":{"getResponse(bytes32)":"415a2bc1","hasResponded(bytes32)":"3257d818","hasRespondedToRequest(bytes32)":"128624f2","lastRequestId()":"fc2a88c3","lastSubmittedValue()":"a77090c8","owner()":"8da5cb5b","responses(bytes32)":"72164a6c","submitData(bytes32,uint256)":"6aadadfb","transferOwnership(address)":"f2fde38b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"getResponse\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hasResponded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"hasRespondedToRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRequestId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastSubmittedValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"responses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"submitData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Mock contract for testing AgroChainOracle\",\"kind\":\"dev\",\"methods\":{\"getResponse(bytes32)\":{\"details\":\"Get response for a request\",\"params\":{\"requestId\":\"The request ID to get response for\"},\"returns\":{\"_0\":\"The submitted value\"}},\"hasRespondedToRequest(bytes32)\":{\"details\":\"Check if provider has responded to a request\",\"params\":{\"requestId\":\"The request ID to check\"},\"returns\":{\"_0\":\"True if responded, false otherwise\"}},\"submitData(bytes32,uint256)\":{\"details\":\"Submit data to the oracle\",\"params\":{\"requestId\":\"The ID of the request\",\"value\":\"The value to submit\"}},\"transferOwnership(address)\":{\"details\":\"Transfer ownership of the mock provider\",\"params\":{\"newOwner\":\"The new owner address\"}}},\"title\":\"MockDataProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/MockDataProvider.sol\":\"MockDataProvider\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"],\"viaIR\":true},\"sources\":{\"test/mocks/MockDataProvider.sol\":{\"keccak256\":\"0xfc846aaf136106e6c40a0b936d76496ade6de0c4fcd650cfcf7f2cbadc08d30f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a531b31874c01808b6390e1e9d9e711e163c60425b0618b26f0b7fa1c410a8b\",\"dweb:/ipfs/QmYustBWQ1i3eNunrAhTvJQcHeUu2xVjZKCvc1QEUhc42t\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getResponse","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"hasResponded","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"hasRespondedToRequest","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"lastRequestId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"lastSubmittedValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"responses","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"submitData"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"}],"devdoc":{"kind":"dev","methods":{"getResponse(bytes32)":{"details":"Get response for a request","params":{"requestId":"The request ID to get response for"},"returns":{"_0":"The submitted value"}},"hasRespondedToRequest(bytes32)":{"details":"Check if provider has responded to a request","params":{"requestId":"The request ID to check"},"returns":{"_0":"True if responded, false otherwise"}},"submitData(bytes32,uint256)":{"details":"Submit data to the oracle","params":{"requestId":"The ID of the request","value":"The value to submit"}},"transferOwnership(address)":{"details":"Transfer ownership of the mock provider","params":{"newOwner":"The new owner address"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/chainlink/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink/=lib/chainlink/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/mocks/MockDataProvider.sol":"MockDataProvider"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"test/mocks/MockDataProvider.sol":{"keccak256":"0xfc846aaf136106e6c40a0b936d76496ade6de0c4fcd650cfcf7f2cbadc08d30f","urls":["bzz-raw://8a531b31874c01808b6390e1e9d9e711e163c60425b0618b26f0b7fa1c410a8b","dweb:/ipfs/QmYustBWQ1i3eNunrAhTvJQcHeUu2xVjZKCvc1QEUhc42t"],"license":"MIT"}},"version":1},"id":104}